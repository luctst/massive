version: "3.9"

services:
  strapi:
    container_name: strapi
    build: 
      context: ./strapi
      dockerfile: Dockerfile.dev
    image: strapi:latest
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./strapi/config:/opt/app/config
      - ./strapi/src:/opt/app/src
      - ./strapi/package.json:/opt/package.json
      - ./strapi/yarn.lock:/opt/yarn.lock
      - ./strapi/.env:/opt/app/.env
      - ./strapi/public/uploads:/opt/app/public/uploads
    ports:
      - '1337:1337'
    networks:
      - strapi
    depends_on:
      - strapiDB
  strapiDB:
    container_name: strapiDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: ./strapi/.env
    image: postgres:12.0-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/postgresql/data/ #using a volume
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder
    ports:
      - '5432:5432'
    networks:
      - strapi
  monorepo:
    build: .
    container_name: monorepo
    ports:
      - ${CLIENT_PORT}:${CLIENT_PORT}
      - "3010:3010"
    volumes:
      - ./apps/client/:/usr/src/app/apps/client
      - 'client-vm:/usr/src/app/apps/client/node_modules'
  ngrok:
    image: wernight/ngrok:latest
    container_name: ngrok
    environment:
      - NGROK_REGION=eu
      - NGROK_DEBUG='true'
      - NGROK_BINDTLS=true
      - NGROK_AUTH=${NGROK_AUTH}
      - NGROK_PORT=monorepo:${CLIENT_PORT}
      - NGROK_USERNAME=${NGROK_USERNAME}
      - NGROK_PASSWORD=${NGROK_PASSWORD}
    volumes:
      - 'ngrok:/home/ngrok/.ngrok2/'
    depends_on:
      - monorepo

volumes:
  strapi-data:
  ngrok:
  client-vm:

networks:
  strapi:
    name: Strapi
    driver: bridge
